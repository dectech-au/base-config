#!/usr/bin/env bash
# /etc/nixos/hosts/enterprise-base-ssd/switch.sh
# Pull → optional flake update → regenerate hostname module → nixos-rebuild

set -euo pipefail

###############################################################################
# Become root if needed, preserving args
###############################################################################
SCRIPT="$(readlink -f "${BASH_SOURCE[0]}")"
if [[ $EUID -ne 0 ]]; then
  echo "[+] Re-execing as root"
  exec sudo -E bash "$SCRIPT" "$@"
fi

KEY="/root/.ssh/id_ed25519_nixos"
REPO_DIR="/etc/nixos"
FLAKE="/etc/nixos#enterprise-base-ssd"
STAMP="/tmp/nix_flake_update.timestamp"

###############################################################################
# 1. Git pull with deploy key
###############################################################################
cd "$REPO_DIR"
eval "$(ssh-agent -s)" >/dev/null
SSH_OPTS="-i $KEY -o IdentitiesOnly=yes"
export GIT_SSH_COMMAND="ssh $SSH_OPTS"
ssh-add -l 2>/dev/null | grep -q "$KEY" || ssh-add -q "$KEY"
git fetch --quiet origin
git reset --hard origin/main

###############################################################################
# 2. nix flake update (max once every 10 min)
###############################################################################
now=$(date +%s)
if [[ ! -f $STAMP || $(( now - $(<"$STAMP") )) -ge 600 ]]; then
  echo "[+] nix flake update"
  nix flake update
  echo "$now" > "$STAMP"
else
  echo "[=] nix flake update skipped (<10 min since last run)"
fi

###############################################################################
# 3. Regenerate hostname module
###############################################################################
serial=$(tr -d ' ' </sys/class/dmi/id/product_serial 2>/dev/null || echo "")
if [[ -z "$serial" || "$serial" == "Unknown" ]]; then
  serial=$(cut -c1-8 /etc/machine-id)
fi
# take last 6 chars
serial6="${serial: -6}"
name="dectech-$serial6"

MODULE_DIR="$REPO_DIR/sys-modules"
mkdir -p "$MODULE_DIR"
cat > "$MODULE_DIR/hostname.nix" <<EOF
{ config, lib, ... }: {
  # auto-generated by switch.sh on $(date -u +"%Y-%m-%dT%H:%M:%SZ")
  networking.hostName = "${name}";
}
EOF
echo "[+] wrote hostname module: $MODULE_DIR/hostname.nix → hostName=${name}"

###############################################################################
# 4. Rebuild system
###############################################################################
echo "[+] nixos-rebuild switch"
nixos-rebuild switch --flake "$FLAKE" --show-trace
